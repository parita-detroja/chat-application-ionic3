{"version":3,"sources":["../../src/pages/set-online/set-online.module.ts","../../node_modules/@ionic-native/geolocation/index.js","../../src/pages/set-online/set-online.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACH;AACW;AAaxD,IAAa,mBAAmB;IAAhC;IAAkC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAtB,mBAAmB;IAX/B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,kEAAa;SACd;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,kEAAa,CAAC;SACxC;QACD,SAAS,EAAE;YACT,8EAAW;SACZ;KACF,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;AChBhC;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AACxB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA,gCAAgC,kDAAkD;AAClF,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;AC3H0C;AAE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","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SetOnlinePage } from './set-online';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n@NgModule({\n  declarations: [\n    SetOnlinePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SetOnlinePage),\n  ],\n  providers: [\n    Geolocation,\n  ],\n})\nexport class SetOnlinePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/set-online/set-online.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Geolocation\n * @description\n * This plugin provides information about the device's location, such as latitude and longitude. Common sources of location information include Global Positioning System (GPS) and location inferred from network signals such as IP address, RFID, WiFi and Bluetooth MAC addresses, and GSM/CDMA cell IDs.\n *\n *  This API is based on the W3C Geolocation API Specification, and only executes on devices that don't already provide an implementation.\n *\n * @usage\n *\n * ```typescript\n * import { Geolocation } from '@ionic-native/geolocation';\n *\n * ...\n *\n * constructor(private geolocation: Geolocation) {}\n *\n * ...\n *\n * this.geolocation.getCurrentPosition().then((resp) => {\n *  // resp.coords.latitude\n *  // resp.coords.longitude\n * }).catch((error) => {\n *   console.log('Error getting location', error);\n * });\n *\n * let watch = this.geolocation.watchPosition();\n * watch.subscribe((data) => {\n *  // data can be a set of coordinates, or an error (if an error occurred).\n *  // data.coords.latitude\n *  // data.coords.longitude\n * });\n * ```\n * @interfaces\n * Coordinates\n * Geoposition\n * PositionError\n * GeolocationOptions\n */\nvar Geolocation = (function (_super) {\n    __extends(Geolocation, _super);\n    function Geolocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get the device's current position.\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n     */\n    Geolocation.prototype.getCurrentPosition = function (options) { return; };\n    /**\n     * Watch the current device's position.  Clear the watch by unsubscribing from\n     * Observable changes.\n     *\n     * ```typescript\n     * const subscription = this.geolocation.watchPosition()\n     *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n     *                               .subscribe(position => {\n     *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n     * });\n     *\n     * // To stop notifications\n     * subscription.unsubscribe();\n     * ```\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n     */\n    Geolocation.prototype.watchPosition = function (options) {\n        return new Observable(function (observer) {\n            var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);\n            return function () { return navigator.geolocation.clearWatch(watchId); };\n        });\n    };\n    return Geolocation;\n}(IonicNativePlugin));\nGeolocation.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nGeolocation.ctorParameters = function () { return []; };\n__decorate([\n    Cordova({\n        callbackOrder: 'reverse'\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], Geolocation.prototype, \"getCurrentPosition\", null);\nGeolocation = __decorate([\n    Plugin({\n        pluginName: 'Geolocation',\n        plugin: 'cordova-plugin-geolocation',\n        pluginRef: 'navigator.geolocation',\n        repo: 'https://github.com/apache/cordova-plugin-geolocation',\n        install: 'ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\"To locate you\"',\n        installVariables: ['GEOLOCATION_USAGE_DESCRIPTION'],\n        platforms: ['Amazon Fire OS', 'Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'Ubuntu', 'Windows', 'Windows Phone']\n    })\n], Geolocation);\nexport { Geolocation };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/geolocation/index.js\n// module id = 623\n// module chunks = 0 1 5","import { Component } from '@angular/core';\nimport { IonicPage } from 'ionic-angular';\nimport { Geolocation } from '@ionic-native/geolocation';\n\nimport { LoghandlingProvider } from '../../providers/loghandling/loghandling';\nimport { OnlineHandlingProvider } from '../../providers/online-handling/online-handling';\nimport { AuthenticationProvider, UserModel } from '../../providers/authentication/authentication';\n\n/**\n * Generated class for the SetOnlinePage page.\n * Allow user to set status online for other user.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-set-online',\n  templateUrl: 'set-online.html',\n})\nexport class SetOnlinePage {\n\n  onlineStatus: boolean;\n  private TAG: string = \"SetOnlinePage\";\n  user: UserModel;\n  uids: Array<string>;\n\n  constructor(\n    private loghandlingProvider: LoghandlingProvider,\n    private onlineHandlingProvider: OnlineHandlingProvider,\n    private geolocation: Geolocation,\n    private authenticationProvider: AuthenticationProvider) {\n      this.authenticationProvider.getFullProfile()\n      .subscribe((user: any) => {\n        this.user = user;\n      });\n    }\n\n  changeToggle(){\n    if(this.onlineStatus == true){\n      this.loghandlingProvider.showLog(this.TAG, 'online status true');\n\n      this.geolocation.getCurrentPosition().then((resp) => {\n        this.loghandlingProvider.showLog(this.TAG, 'Lat ' + resp.coords.latitude);\n        this.loghandlingProvider.showLog(this.TAG, 'Lon ' + resp.coords.longitude);\n\n        this.onlineHandlingProvider.setUserOnline(this.user.uid,this.user.displayName,resp.coords.latitude,resp.coords.longitude).\n        then(() => {\n          this.loghandlingProvider.showLog(this.TAG, 'Added user for online.');\n          this.checkUserUpdate();      \n        }, (error) => {\n          this.loghandlingProvider.showLog(this.TAG, 'Error for adding user online.');\n        });        \n      }).catch((error) => {\n        this.loghandlingProvider.showLog(this.TAG, 'Error getting location ' + error);\n      });\n    }else{\n      this.loghandlingProvider.showLog(this.TAG, 'online status false');\n\n      this.onlineHandlingProvider.setUserOffline(this.user.uid).\n      then(() => {\n        this.loghandlingProvider.showLog(this.TAG, 'Removed user from online.');\n      }, (error) => {\n        this.loghandlingProvider.showLog(this.TAG, 'Error for removing user from online.');\n      });\n    }\n  }\n\n  checkUserUpdate(){\n    this.onlineHandlingProvider.checkActiveChatWith(this.user.uid)\n    .subscribe(uid => {this.uids = uid;\n      this.loghandlingProvider.showLog(this.TAG,\"uid added.\" + this.uids.values)});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/set-online/set-online.ts"],"sourceRoot":""}