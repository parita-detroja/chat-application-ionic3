{"version":3,"sources":["../../src/pages/parsonalchat/parsonalchat.module.ts","../../src/components/emoji-picker/emoji-picker.module.ts","../../src/components/emoji-picker/emoji-picker.ts","../../src/pages/parsonalchat/parsonalchat.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ParsonalchatPage } from './parsonalchat';\nimport { EmojiPickerComponentModule } from \"../../components/emoji-picker/emoji-picker.module\";\nimport { EmojiProvider } from \"../../providers/emojiprovider/emojiprovider\";\n\n@NgModule({\n  declarations: [\n    ParsonalchatPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ParsonalchatPage),\n    EmojiPickerComponentModule\n  ],\n  exports: [\n    ParsonalchatPage\n  ],\n  providers:[\n    EmojiProvider\n  ]\n})\nexport class ParsonalchatPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/parsonalchat/parsonalchat.module.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EmojiPickerComponent } from './emoji-picker';\n\n@NgModule({\n    declarations: [\n        EmojiPickerComponent,\n    ],\n    imports: [\n        IonicPageModule.forChild(EmojiPickerComponent),\n    ],\n    exports: [\n        EmojiPickerComponent\n    ]\n})\nexport class EmojiPickerComponentModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/emoji-picker/emoji-picker.module.ts","import { Component, forwardRef } from '@angular/core';\nimport { EmojiProvider } from \"../../providers/emojiprovider/emojiprovider\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n/**\n * Generated class for the EmojiPickerComponent component.\n *\n * Emoji picker component handling.\n */\n\nexport const EMOJI_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EmojiPickerComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'emoji-picker',\n    providers: [EMOJI_PICKER_VALUE_ACCESSOR],\n    templateUrl: './emoji-picker.html'\n})\nexport class EmojiPickerComponent implements ControlValueAccessor {\n\n    emojiArr = [];\n\n    _content: string;\n    _onChanged: Function;\n    _onTouched: Function;\n\n    constructor(private emojiProvider: EmojiProvider) {\n        this.emojiArr = this.emojiProvider.getEmojis();\n    }\n\n    writeValue(obj: any): void {\n        this._content = obj;\n    }\n\n    registerOnChange(fn: any): void {\n        this._onChanged = fn;\n        this.setValue(this._content);\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouched = fn;\n    }\n\n    private setValue(val: any): any {\n        this._content += val;\n        if (this._content) {\n            this._onChanged(this._content)\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/emoji-picker/emoji-picker.ts","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonicPage, NavParams, Platform, TextInput, Content, LoadingController, NavController } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\n\nimport { ChathandlingProvider } from '../../providers/chathandling/chathandling';\nimport { UserModel } from '../../providers/authentication/authentication';\nimport { LoghandlingProvider } from '../../providers/loghandling/loghandling';\nimport { ConstantProvider } from '../../providers/constant/constant';\nimport { MessageimagehandlerProvider } from '../../providers/messageimagehandler/messageimagehandler';\nimport { OnlineHandlingProvider } from '../../providers/online-handling/online-handling';\nimport { AlerthandlingProvider } from '../../providers/alerthandling/alerthandling';\n\n/**\n * Generated class for the ParsonalchatPage page.\n *\n * Page display list of messages for personal channel.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-parsonalchat',\n  templateUrl: 'parsonalchat.html',\n})\nexport class ParsonalchatPage implements OnInit, OnDestroy {\n\n  private TAG: string = 'ParsonalchatPage';\n  private chatText: string = '';\n  private chatMessages: Array<string>;\n  private user: UserModel;\n  private channelId: string;\n  private loading: any;\n  private favoriteFlag: any;\n  private key: number;\n\n  showEmojiPicker = false;\n  @ViewChild('chat_input') messageInput: TextInput;\n  @ViewChild(Content) content: Content;\n\n  private autoScroller: MutationObserver;\n\n  /**\n   * Default constructor.\n   * @param navParams used to retrive user.\n   * @param platform used for keyboard and scrolling related issue.\n   * @param keyboard keyboard related handling\n   * @param chatProvider chat handling\n   * @param apihandlingProvider provides api methods.\n   * @param loghandlingProvider log handling provider.\n   * @param loadingController loading controller.\n   * @param messageimagehandlerProvider handle image uploading on firebase.\n   */\n  constructor(\n    private navParams: NavParams,\n    private platform: Platform,\n    private keyboard: Keyboard,\n    private chatProvider: ChathandlingProvider,\n    private loghandlingProvider: LoghandlingProvider,\n    private loadingController: LoadingController,\n    private messageimagehandlerProvider: MessageimagehandlerProvider,\n    private onlineHandlingProvider: OnlineHandlingProvider,\n    private alerthandlingProvider: AlerthandlingProvider,\n    private navController: NavController) {\n    this.user = this.navParams.get('user');\n    this.channelId = this.navParams.get('channelId');\n\n    this.checkFavorited().then((res: any) => {\n      this.loghandlingProvider.showLog(this.TAG, \"favorite flag : \" + res);\n      this.favoriteFlag = res;\n    }).catch((err) => {\n      this.favoriteFlag = false;\n      alert(err);\n    });\n\n\n    this.loadData();\n  }\n\n  /**\n   * Check whether user favorited chat or not.\n   */\n  checkFavorited() {\n    var promise = new Promise((resolve, reject) => {\n      this.onlineHandlingProvider.isFavorited(this.channelId).then((res: any) => {\n        if(res){\n          this.key = res.length;\n          res.forEach(element => {\n            this.loghandlingProvider.showLog(this.TAG, \"Contact : \" + (element));\n            if(element == this.user.uid)\n            {\n              resolve(true);\n            }\n          });\n          resolve(false);\n        }\n        else{\n          this.key = 0;\n          resolve(false);\n        }\n      }).catch((err) => {\n        alert(err);\n      });\n      //this.loghandlingProvider.showLog(this.TAG, \"contacts : \" + contacts);\n      /*this.loghandlingProvider.showLog(this.TAG, \"contacts : \" + JSON.stringify(contacts.toString()));\n      contacts.forEach(element => {\n        this.loghandlingProvider.showLog(this.TAG, \"element : \" + element);\n        });\n      /*this.onlineHandlingProvider.isFavorited(this.channelId).subscribe((contacts) => {\n        this.key = contacts.length;\n        this.loghandlingProvider.showLog(this.TAG, \"contacts : \" + contacts);\n        contacts.forEach(element => {\n          this.loghandlingProvider.showLog(this.TAG, \"Contact : \" + JSON.stringify(element));\n          if(element.fav_by)\n          {\n            let uids: string[] = element;\n            for(let i in uids)\n            {\n              if(uids[i] == this.user.uid)\n              {\n                resolve(true);\n              }\n            }\n          }\n        });\n        resolve(false);\n      });*/\n    })\n    return promise;\n  }\n\n  /**\n   * Load data for personal chennal.\n   */\n  loadData() {\n    this.loghandlingProvider.showLog(this.TAG, this.channelId);\n\n    this.chatProvider.getPersonalMessages(this.channelId)\n      .subscribe(messages => {\n        if (messages.length > 0) {\n          this.chatMessages = messages;\n          this.loghandlingProvider.showLog(this.TAG, \"message subscribed\");\n        }\n      });\n\n    if (this.platform.is('cordova')) {\n      this.keyboard.onKeyboardShow()\n        .subscribe(() => this.scrollDown());\n    }\n  }\n\n  /**\n   * Auto scroll page on init.\n   */\n  ngOnInit() {\n    this.autoScroller = this.autoScroll();\n  }\n\n  /**\n   * Disconnect scroller on destroy.\n   */\n  ngOnDestroy() {\n    this.autoScroller.disconnect();\n    ConstantProvider.setAlreadySubscribed(false);\n  }\n\n  /**\n   * Call send message method of chat provider on send button.\n   * @param event specific event from button.\n   */\n  sendMessage(event: any) {\n    if (!this.chatText)\n      return;\n\n    this.chatProvider.sendPersonalMessage((this.user as any).$key, this.chatText, this.channelId)\n      .then(() => {\n        this.chatText = '';\n        this.scrollDown();\n      }, (error) => {\n        this.loghandlingProvider.showLog(this.TAG, error.toString());\n      });\n  }\n\n  /**\n   * Compare received timestump with current one.\n   * @param timestamp timestump to check\n   */\n  isToday(timestamp: number) {\n    return new Date(timestamp).setHours(0, 0, 0, 0) == new Date().setHours(0, 0, 0, 0);\n  }\n\n  /**\n   * Scroll down using scroller.\n   */\n  private scrollDown() {\n    this.scroller.scrollTop = this.scroller.scrollHeight;\n  }\n\n  /**\n   * Return auto scroller.\n   */\n  private autoScroll(): MutationObserver {\n    const autoScroller = new MutationObserver(this.scrollDown.bind(this));\n\n    autoScroller.observe(this.messageContent, {\n      childList: true,\n      subtree: true\n    });\n\n    return autoScroller;\n  }\n\n  /**\n   * Get message content.\n   */\n  private get messageContent(): Element {\n    return document.querySelector('.messages');\n  }\n\n  /**\n   * Scroll message content. \n   */\n  private get scroller(): Element {\n    return this.messageContent.querySelector('.scroll-content');\n  }\n\n  /**\n   * Method called on emoji button for appering emoji keyboard.\n   */\n  switchEmojiPicker() {\n    this.showEmojiPicker = !this.showEmojiPicker;\n    if (!this.showEmojiPicker) {\n      this.messageInput.setFocus();\n    }\n    this.content.resize();\n    this.scrollToBottom();\n  }\n\n  /**\n   * Scroll to bottom while emoji keyboard appered.\n   */\n  scrollToBottom() {\n    setTimeout(() => {\n      if (this.content.scrollToBottom) {\n        this.content.scrollToBottom();\n      }\n    }, 400)\n  }\n\n  /**\n   * Update flag for emoji picker and scroll to bottom.\n   */\n  onFocus() {\n    this.showEmojiPicker = false;\n    this.content.resize();\n    this.scrollToBottom();\n  }\n\n  /**\n   * Send image as message from camera button.\n   */\n  sendPicMsg() {\n    this.loading.present();\n    this.messageimagehandlerProvider.imageMassegeUpload().then((imgurl) => {\n      this.loading.dismiss();\n      this.chatProvider.sendPersonalMessage((this.user as any).$key, imgurl.toString(), this.channelId)\n        .then(() => {\n          this.chatText = '';\n          this.scrollDown();\n        }, (error) => {\n          this.loghandlingProvider.showLog(this.TAG, error.toString());\n        })\n    }).catch((err) => {\n      alert(err);\n      this.loading.dismiss();\n    })\n  }\n\n  /**\n   * Generates specific delete chat confirmation dialog.\n   * @param e event specify direction of swipe.\n   */\n  swipeEvent(e) {\n    if (e.direction == 4 || e.direction == 2) {\n      this.deleteChatHandling();\n    }\n  }\n\n  deleteChatHandling() {\n    this.alerthandlingProvider.confirmAlert(\"Confirm delete\", \"Are you sure you want to delete the chat?\").then((res) => {\n      if (this.favoriteFlag == false) {\n        this.onlineHandlingProvider.deleteChat(this.user.uid, this.channelId);\n        this.navController.pop();\n        let loading = this.loadingController.create();\n        loading.present();\n        this.navController.setRoot(\"TabsPage\");\n        loading.dismiss();\n      } else {\n        this.loghandlingProvider.showLog(this.TAG, \"No delete for Favorited user.\");\n      }\n    }, err => {\n      this.loghandlingProvider.showLog(this.TAG, \"user cancelled.\");\n    });\n  }\n\n  /**\n   * Add user entry for favorite.\n   */\n  addToFavorite() {\n    this.favoriteFlag = true;\n    this.onlineHandlingProvider.addFavoriteChat(this.user.uid, this.channelId, this.key);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/parsonalchat/parsonalchat.ts"],"sourceRoot":""}