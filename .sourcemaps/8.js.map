{"version":3,"sources":["../../src/pages/tab-contacts/tab-contacts.module.ts","../../src/pages/tab-contacts/tab-contacts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AAUjD,IAAa,qBAAqB;IAAlC;IAAoC,CAAC;IAAD,4BAAC;AAAD,CAAC;AAAxB,qBAAqB;IARjC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sEAAe;SAChB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC;SAC1C;KACF,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZ2B;AACkB;AAEE;AACA;AACH;AAE9E;;;;GAIG;AAOH,IAAa,eAAe;IAO1B,yBACU,GAAQ,EACR,iBAAoC,EACpC,oBAA0C,EAC1C,oBAA0C,EAC1C,cAA8B,EAC9B,MAAc,EACd,mBAAwC,EACxC,iBAAoC;QAPpC,QAAG,GAAH,GAAG,CAAK;QACR,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAbtC,QAAG,GAAW,iBAAiB,CAAC;QAEhC,oBAAe,GAAa,EAAE,CAAC;QAYrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;IACtD,CAAC;IAED,wCAAc,GAAd;QAAA,iBAgBC;QAfC,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;QAC9C,OAAO,CAAC,OAAO,EAAE,CAAC;QAElB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;QAE9C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,EAAE,UAAC,YAAY;YAC1D,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAI,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC;YACrE,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;YACtC,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACrC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC7D,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,2CAAiB,GAAjB,UAAkB,MAAc;QAC9B,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,kCAAQ,GAAR,UAAS,GAAW;QAElB,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,EAAC,GAAG,EAAE,GAAG,EAAC,CAAC,CAAC;IAC1D,CAAC;IAEH,sBAAC;AAAD,CAAC;AA/CY,eAAe;IAJ3B,wEAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;OACG;KACjC,CAAC;iFASkB;QACW,kGAAiB;QACd,kGAAoB;QACpB,sEAAoB;QAC1B,8DAAc;QACtB,+FAAM;QACO,0EAAmB;QACrB,YAAiB;AAgC/C;SA/CY,eAAe,gB","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TabContactsPage } from './tab-contacts';\n\n@NgModule({\n  declarations: [\n    TabContactsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TabContactsPage),\n  ],\n})\nexport class TabContactsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tab-contacts/tab-contacts.module.ts","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { IonicPage, LoadingController, MenuController, App, Events } from 'ionic-angular';\n\nimport { ContactslistProvider } from '../../providers/contactslist/contactslist';\nimport { LocalstorageProvider } from '../../providers/localstorage/localstorage';\nimport { LoghandlingProvider } from '../../providers/loghandling/loghandling';\n\n/**\n * Generated class for the TabContactsPage page.\n *\n * Display list of contacts.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-tab-contacts',\n  templateUrl: 'tab-contacts.html',\n})\nexport class TabContactsPage {\n  \n  private TAG: string = \"TabContactsPage\";\n  private contactList: Array<any>;\n  private presentUserList: string[] = [];\n  private email: string;\n\n  constructor(\n    private app: App, \n    private loadingController: LoadingController, \n    private contactslistProvider: ContactslistProvider,\n    private localstorageProvider: LocalstorageProvider,\n    private menuController: MenuController,\n    private events: Events,\n    private loghandlingProvider: LoghandlingProvider,\n    private changeDetectorRef: ChangeDetectorRef) {\n    this.email = this.localstorageProvider.getEmail();\n    this.menuController.enable(true, 'navigation_menu');\n  }\n\n  ionViewDidLoad() {\n    let loading = this.loadingController.create();\n    loading.present();\n\n    this.contactslistProvider.getPresentUserList();\n\n     this.events.subscribe('Present users updated', (presentUsers) => {\n       this.loghandlingProvider.showLog(this.TAG, \"Present users updated.\");\n       this.changeDetectorRef.markForCheck();\n       this.presentUserList = presentUsers;\n      });\n\n    this.contactslistProvider.getContactsList().subscribe((contacts) => {\n      this.contactList = contacts;\n      loading.dismiss();\n    })\n  }\n\n  checkOnlineStatus(userId: string){\n    return (this.presentUserList.indexOf(userId)>-1);\n  }\n  \n  joinChat(uid: string)\n  {\n    this.app.getRootNav().push('OneTwoOnePage', {uid: uid});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tab-contacts/tab-contacts.ts"],"sourceRoot":""}