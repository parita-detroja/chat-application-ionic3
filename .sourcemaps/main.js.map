{"version":3,"sources":["../../src/pages/login/login.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/authentication/authentication.ts","../../src/providers/apihandling/apihandling.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.firebaseconfig.ts","../../src/app/app.component.ts","../../src/providers/alerthandling/alerthandling.ts","../../src/providers/constant/constant.ts","../../src/providers/loghandling/loghandling.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\n\nimport { LoghandlingProvider } from '../../providers/loghandling/loghandling';\nimport { AuthenticationProvider } from '../../providers/authentication/authentication';\nimport { ConstantProvider } from '../../providers/constant/constant';\nimport { ApihandlingProvider } from '../../providers/apihandling/apihandling';\nimport { usercredentials } from '../../models/interfaces/usercredentials';\n\n/**\n * Generated class for the LoginPage page.\n *\n * Login page provide user authentication using facebook.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  private TAG: string = \"LoginPage\";\n  credentials = {} as usercredentials;\n\n  constructor(private navCtrl: NavController, private navParams: NavParams, private loadingCtrl: LoadingController,\n  private authenticationProvider: AuthenticationProvider, private loghandlingProvider: LoghandlingProvider, \n  private apihandlingProvider: ApihandlingProvider) {\n  }\n\n  ionViewDidLoad() {\n    this.loghandlingProvider.showLog(this.TAG,'ionViewDidLoad LoginPage');\n  }\n\n  loginWithFacebook() {\n    let loading = this.loadingCtrl.create();\n    loading.present();\n    this.authenticationProvider.signInWithFacebook()\n      .then((res) => {\n        this.loghandlingProvider.showLog(this.TAG, \"user get auth token\" + res.user);\n        loading.dismiss();\n      }, (error) => {\n        this.loghandlingProvider.showLog(this.TAG, \"from error block\" + error.message);\n        loading.dismiss();\n      });\n\n    /*this.loghandlingProvider.showLog(this.TAG, \"calling api\");\n    this.apihandlingProvider.callRequest(ConstantProvider.BASE_URL + \"getUserToChat\").subscribe(res => {\n      this.loghandlingProvider.showLog(this.TAG, res.name +\" : \"+ res.uid);\n    },err => {\n      this.loghandlingProvider.showLog(this.TAG, err.message);\n    });*/\n  }\n\n  loginWithGoogle(){\n    //google login \n  }\n\n  loginWithGithub(){\n    //github login\n  }\n\n  signin(){\n     this.authenticationProvider.login(this.credentials).then((res: any) => {\n      if (!res.code)\n        this.navCtrl.setRoot('TabsPage');\n      else\n        alert(res);\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 112;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 112\n// module chunks = 5","var map = {\n\t\"../pages/login/login.module\": [\n\t\t297,\n\t\t4\n\t],\n\t\"../pages/tab-chats/tab-chats.module\": [\n\t\t298,\n\t\t3\n\t],\n\t\"../pages/tab-contacts/tab-contacts.module\": [\n\t\t299,\n\t\t2\n\t],\n\t\"../pages/tab-profile/tab-profile.module\": [\n\t\t300,\n\t\t1\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t301,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 154;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 154\n// module chunks = 5","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\nimport { Facebook } from '@ionic-native/facebook';\nimport { AngularFireAuth } from 'angularfire2/auth';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\nimport { usercredentials } from '../../models/interfaces/usercredentials';\n\n/*\n  Generated class for the AuthenticationProvider provider.\n\n  AuthenticationProvider provides facebook sigin and auth tocken from that.\n*/\n@Injectable()\nexport class AuthenticationProvider {\n\n  private TAG: string = 'AuthenticationProvider';\n\n  /**\n   * Basic constructor for LogServiceProvider.\n   */\n  constructor(private loghandlingProvider: LoghandlingProvider, private platform: Platform,\n  private facebook: Facebook, private angularFireAuth: AngularFireAuth) {\n    this.loghandlingProvider.showLog(this.TAG,'Hello AuthenticationProvider Provider');\n  }\n\n  /**\n   * sign in with facebook\n   */\n  signInWithFacebook() {\n     this.loghandlingProvider.showLog(this.TAG, \"sign in with facebook\");\n    if (this.platform.is('cordova')) {\n      return this.platform.ready().then(() => {\n        return this.facebook.login(['email', 'public_profile']).then((res) => {\n           this.loghandlingProvider.showLog(this.TAG, \"credential \" + res.authResponse.accessToken);\n          return res.authResponse.accessToken;\n        }, (error) => {\n           this.loghandlingProvider.showLog(this.TAG, \"from error block of auth\" + error.message);\n          return error.message;\n      });\n      });\n    } else {\n       this.loghandlingProvider.showLog(this.TAG, \"else block for none cordova.\");\n    }\n  }\n\n  /**\n   * Allow user to login with email and password from firebase.\n   * @param credentials user login credential having email and password.\n   */\n  login(credentials: usercredentials) {\n    var promise = new Promise((resolve, reject) => {\n      this.angularFireAuth.auth.signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n        resolve(true);\n      }).catch((err) => {\n        reject(err);\n       })\n    })\n\n    return promise;\n    \n  }  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/authentication/authentication.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n\n/*\n  Generated class for the RestapiServiceProvider provider.\n  RestapiServiceProvider contains all http request handling service for other stuff.\n*/\n@Injectable()\nexport class ApihandlingProvider {\n\n  private TAG: string = \"ApihandlingProvider\";\n\n  /**\n   * RestapiServiceProvider constructor for initial stuff handling.\n   * @param http Http instance to handle all requests and responces. \n   * @param logServiceProvider log service provider for log generation.\n   */\n  constructor(private http: Http, private loghandlingProvider: LoghandlingProvider) {\n    this.loghandlingProvider.showLog(this.TAG, 'Hello RestapiServiceProvider Provider');\n  }\n\n  /**\n   * This method handle http request from different apis. \n   * @param url URL value for request generation\n   */\n  callRequest(url: string)\n  {\n    this.loghandlingProvider.showLog(this.TAG, \"from request method\");\n    return  this.http.request(url)\n            .do((res : Response ) => this.loghandlingProvider.showLog(this.TAG, res.json()))\n            .map((res : Response ) => res.json())\n            .catch(error => error);\n  }\n\n  /**\n   * This method handle get http request from different apis. \n   * @param url URL value for request generation\n   */\n  callGetRequest(url: string)\n  {\n    this.loghandlingProvider.showLog(this.TAG, \"from get request method\");\n    return  this.http.get(url)\n            .do((res : Response ) => this.loghandlingProvider.showLog(this.TAG, res.json()))\n            .map((res : Response ) => res.json())\n            .catch(error => error);\n  }\n\n  /**\n   * This method handle post http request from different apis.\n   * @param url URL value for request generation\n   * @param data contains value need to pass with request.\n   */\n  callPostRequest(url: string, data: any)\n  {\n     return  this.http.post(url, data)\n             .do((res : Response ) => this.loghandlingProvider.showLog(this.TAG, res.json()))\n             .map((res : Response ) => res.json())\n             .catch(error => error);\n  }\n\n  /**\n   * Generate header for http request.\n   */\n  getHeader(){\n    let header = new Headers();\n    header.append('Content-Type', 'application/json');\n    //set some param using set method i.e authorization token.\n    return header;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/apihandling/apihandling.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Facebook } from '@ionic-native/facebook';\nimport { HttpModule } from '@angular/http';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { config } from './app.firebaseconfig';\n\nimport { MyApp } from './app.component';\nimport { LoginPage } from '../pages/login/login';\n\nimport { AuthenticationProvider } from '../providers/authentication/authentication';\nimport { AlerthandlingProvider } from '../providers/alerthandling/alerthandling';\nimport { LoghandlingProvider } from '../providers/loghandling/loghandling';\nimport { ConstantProvider } from '../providers/constant/constant';\nimport { ApihandlingProvider } from '../providers/apihandling/apihandling';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp),\n    AngularFireModule.initializeApp(config)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AuthenticationProvider,\n    AlerthandlingProvider,\n    LoghandlingProvider,\n    ConstantProvider,\n    Facebook,\n    ApihandlingProvider,\n    AngularFireAuth\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export var config = {\n    apiKey: 'AIzaSyB3vBqyBvmWGsfsx02iXgdaoHbv_KqMTbE',\n    authDomain: 'https://surfer-2c9ac.firebaseapp.com/__/auth/handler',\n    databaseURL: 'https://surfer-2c9ac.firebaseio.com/',\n    projectId: 'surfer-2c9ac',\n    storageBucket: 'surfer-2c9ac.appspot.com',\n    messagingSenderId: '34191777330'\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.firebaseconfig.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { LoginPage } from '../pages/login/login';\n\nimport { LoghandlingProvider } from '../providers/loghandling/loghandling';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, private loghandlingProvider: LoghandlingProvider) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n      this.loghandlingProvider.changeDebuggingState(true);\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { AlertController} from 'ionic-angular';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n/*\n  Generated class for the AlerthandlingProvider provider.\n\n  AlerthandlingProvider contains all alert handling methods.\n*/\n@Injectable()\nexport class AlerthandlingProvider {\n\n  loader: any;\n  alert: any;\n  private TAG:string = \"AlerthandlingProvider\";\n\n  /**\n   * Constructor of AlerthandlingProvider for basic initialisation stuff.\n   * @param alertCtrl AlertController for create alert\n   * @param logServiceProvider log handling service instance.\n   */\n  constructor(private alertCtrl: AlertController, private loghandlingProvider: LoghandlingProvider) {\n    this.loghandlingProvider.showLog(this.TAG,'Constructor UtilityServiceProvider Provider');\n  }\n\n   /**\n   * Dispaly default Alert for any message, response or erroe with 'OK' button etc.\n   * @param message value to display as message in alert dialog.\n   */\n  public presentAlert(title: string, message: string) {\n    this.alert = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n    });\n    this.alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/alerthandling/alerthandling.ts","import { Injectable } from '@angular/core';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n\n/*\n  Generated class for the ConstantProvider provider.\n\n  ConstantProvider contains all constant variable.\n*/\n@Injectable()\nexport class ConstantProvider {\n\n  private TAG:string = \"ConstantProvider\";\n\n  /** Alert title */\n  public static ALERT_TITLE_ERROR: string = \"Error\";\n  public static ALERT_TITLE_ALERT: string = \"Alert\";\n  public static ALERT_TITLE_CONFIRM: string = \"Confirm\";\n  public static ALERT_TITLE_WARNING: string = \"Warning\";\n  public static ALERT_TITLE_SUCCESS: string = \"Success\";\n\n  /** base url constant */\n  public static BASE_URL: string = \"https://us-central1-surfer-2c9ac.cloudfunctions.net/\";\n\n  constructor(private loghandlingProvider: LoghandlingProvider) {\n     this.loghandlingProvider.showLog(this.TAG,'Hello ConstantProvider Provider');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/constant/constant.ts","import { Injectable } from '@angular/core';\n\n/*\n  Generated class for the LoghandlingProvider provider.\n\n  LoghandlingProvider handle console log for application.\n*/\n@Injectable()\nexport class LoghandlingProvider {\n\n   private isDebugging: boolean = false;  // debugging state\n   private TAG: string = \"LoghandlingProvider\"; //tag for log\n\n  /**\n   * Basic constructor for LogServiceProvider.\n   */\n  constructor() {\n    this.showLog(this.TAG,'Hello LoghandlingProvider Provider');\n  }\n\n  /**\n   * This method display console log from other pages and providers, if debugging active.\n   * @param log value need display as log.\n   */\n  showLog(tag: string, log: string){\n    if(this.isDebugging)\n    {\n      console.log(tag + \" : \" + log);\n    }\n  }\n\n  /**\n   * This method allow to change debugging state.\n   * @param state boolean value having debugging state.\n   */\n  changeDebuggingState(state: boolean){\n    this.isDebugging = state;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/loghandling/loghandling.ts"],"sourceRoot":""}