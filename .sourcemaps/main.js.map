{"version":3,"sources":["../../src/pages/login/login.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/authentication/authentication.ts","../../src/providers/alerthandling/alerthandling.ts","../../src/providers/constant/constant.ts","../../src/providers/loghandling/loghandling.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the LoginPage page.\n *\n * Login page provide user authentication using facebook.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 109\n// module chunks = 1","var map = {\n\t\"../pages/login/login.module\": [\n\t\t268,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { LoginPage } from '../pages/login/login';\n\nimport { AuthenticationProvider } from '../providers/authentication/authentication';\nimport { AlerthandlingProvider } from '../providers/alerthandling/alerthandling';\nimport { LoghandlingProvider } from '../providers/loghandling/loghandling';\nimport { ConstantProvider } from '../providers/constant/constant';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AuthenticationProvider,\n    AlerthandlingProvider,\n    LoghandlingProvider,\n    ConstantProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { LoginPage } from '../pages/login/login';\n\nimport { LoghandlingProvider } from '../providers/loghandling/loghandling';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, private loghandlingProvider: LoghandlingProvider) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n      this.loghandlingProvider.changeDebuggingState(true);\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the AuthenticationProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class AuthenticationProvider {\n\n  constructor(public http: Http) {\n    console.log('Hello AuthenticationProvider Provider');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/authentication/authentication.ts","import { Injectable } from '@angular/core';\nimport { AlertController} from 'ionic-angular';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n/*\n  Generated class for the AlerthandlingProvider provider.\n\n  AlerthandlingProvider contains all alert handling methods.\n*/\n@Injectable()\nexport class AlerthandlingProvider {\n\n  loader: any;\n  alert: any;\n  private TAG:string = \"AlerthandlingProvider\";\n\n  /**\n   * Constructor of AlerthandlingProvider for basic initialisation stuff.\n   * @param alertCtrl AlertController for create alert\n   * @param logServiceProvider log handling service instance.\n   */\n  constructor(private alertCtrl: AlertController, private loghandlingProvider: LoghandlingProvider) {\n    this.loghandlingProvider.showLog(this.TAG,'Constructor UtilityServiceProvider Provider');\n  }\n\n   /**\n   * Dispaly default Alert for any message, response or erroe with 'OK' button etc.\n   * @param message value to display as message in alert dialog.\n   */\n  public presentAlert(title: string, message: string) {\n    this.alert = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n    });\n    this.alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/alerthandling/alerthandling.ts","import { Injectable } from '@angular/core';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n\n/*\n  Generated class for the ConstantProvider provider.\n\n  ConstantProvider contains all constant variable.\n*/\n@Injectable()\nexport class ConstantProvider {\n\n  private TAG:string = \"ConstantProvider\";\n\n  /** Alert title */\n  public static ALERT_TITLE_ERROR: string = \"Error\";\n  public static ALERT_TITLE_ALERT: string = \"Alert\";\n  public static ALERT_TITLE_CONFIRM: string = \"Confirm\";\n  public static ALERT_TITLE_WARNING: string = \"Warning\";\n  public static ALERT_TITLE_SUCCESS: string = \"Success\";\n\n  constructor(private loghandlingProvider: LoghandlingProvider) {\n     this.loghandlingProvider.showLog(this.TAG,'Hello ConstantProvider Provider');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/constant/constant.ts","import { Injectable } from '@angular/core';\n\n/*\n  Generated class for the LoghandlingProvider provider.\n\n  LoghandlingProvider handle console log for application.\n*/\n@Injectable()\nexport class LoghandlingProvider {\n\n   private isDebugging: boolean = false;  // debugging state\n   private TAG: string = \"LoghandlingProvider\"; //tag for log\n\n  /**\n   * Basic constructor for LogServiceProvider.\n   */\n  constructor() {\n    this.showLog(this.TAG,'Hello LoghandlingProvider Provider');\n  }\n\n  /**\n   * This method display console log from other pages and providers, if debugging active.\n   * @param log value need display as log.\n   */\n  showLog(tag: string, log: string){\n    if(this.isDebugging)\n    {\n      console.log(tag + \" : \" + log);\n    }\n  }\n\n  /**\n   * This method allow to change debugging state.\n   * @param state boolean value having debugging state.\n   */\n  changeDebuggingState(state: boolean){\n    this.isDebugging = state;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/loghandling/loghandling.ts"],"sourceRoot":""}