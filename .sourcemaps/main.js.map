{"version":3,"sources":["../../src/providers/constant/constant.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/emojiprovider/emojiprovider.ts","../../src/providers/chathandling/chathandling.ts","../../src/providers/apihandling/apihandling.ts","../../src/providers/contactslist/contactslist.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/loghandling/loghandling.ts","../../src/app/app.component.ts","../../src/providers/alerthandling/alerthandling.ts","../../src/directives/auto-size/auto-size.ts","../../src/app/app.firebaseconfig.ts","../../src/providers/authentication/authentication.ts","../../src/providers/localstorage/localstorage.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n\n/*\n  Generated class for the ConstantProvider provider.\n\n  ConstantProvider contains all constant variable.\n*/\n@Injectable()\nexport class ConstantProvider {\n\n  private TAG:string = \"ConstantProvider\";\n\n  /** Alert title */\n  public static ALERT_TITLE_ERROR: string = \"Error\";\n  public static ALERT_TITLE_ALERT: string = \"Alert\";\n  public static ALERT_TITLE_CONFIRM: string = \"Confirm\";\n  public static ALERT_TITLE_WARNING: string = \"Warning\";\n  public static ALERT_TITLE_SUCCESS: string = \"Success\";\n\n  /** base url constants */\n  public static BASE_URL: string = \"https://us-central1-surfer-2c9ac.cloudfunctions.net/\";\n\n  /** local storage keys */\n  public static KEY_USERNAME: string = \"username\";\n  public static KEY_EMAIL: string = \"email\";\n\n  constructor(private loghandlingProvider: LoghandlingProvider) {\n     this.loghandlingProvider.showLog(this.TAG,'Hello ConstantProvider Provider');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/constant/constant.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 153\n// module chunks = 7","var map = {\n\t\"../pages/chat-message/chat-message.module\": [\n\t\t601,\n\t\t2\n\t],\n\t\"../pages/login/login.module\": [\n\t\t602,\n\t\t6\n\t],\n\t\"../pages/parsonalchat/parsonalchat.module\": [\n\t\t603,\n\t\t1\n\t],\n\t\"../pages/tab-chats/tab-chats.module\": [\n\t\t604,\n\t\t0\n\t],\n\t\"../pages/tab-contacts/tab-contacts.module\": [\n\t\t605,\n\t\t5\n\t],\n\t\"../pages/tab-profile/tab-profile.module\": [\n\t\t606,\n\t\t4\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t607,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 196;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 196\n// module chunks = 7","import { Injectable } from '@angular/core';\n\n/*\n  Generated class for the EmojiProvider provider.\n\n  Provide emojis for chat.\n*/\n@Injectable()\nexport class EmojiProvider {\n  constructor() {}\n\n  /**\n   * Retuens all emojis.\n   */\n  getEmojis() {\n      const EMOJIS = \"😀 😃 😄 😁 😆 😅 😂 🤣 ☺️ 😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 🤡 🤠 😏 😒 😞 😔 😟 😕 🙁\" +\n          \" ☹️ 😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 🤤 😭 😓 😪 😴 🙄 🤔 🤥 😬 🤐 🤢 🤧 😷 🤒 🤕 😈 👿\" +\n          \" 👹 👺 💩 👻 💀 ☠️ 👽 👾 🤖 🎃 😺 😸 😹 😻 😼 😽 🙀 😿 😾 👐 🙌 👏 🙏 🤝 👍 👎 👊 ✊ 🤛 🤜 🤞 ✌️ 🤘 👌 👈 👉 👆 👇 ☝️ ✋ 🤚\" +\n          \" 🖐 🖖 👋 🤙 💪 🖕 ✍️ 🤳 💅 🖖 💄 💋 👄 👅 👂 👃 👣 👁 👀 🗣 👤 👥 👶 👦 👧 👨 👩 👱‍♀️ 👱 👴 👵 👲 👳‍♀️ 👳 👮‍♀️ 👮 👷‍♀️ 👷\" +\n          \" 💂‍♀️ 💂 🕵️‍♀️ 🕵️ 👩‍⚕️ 👨‍⚕️ 👩‍🌾 👨‍🌾 👩‍🍳 👨‍🍳 👩‍🎓 👨‍🎓 👩‍🎤 👨‍🎤 👩‍🏫 👨‍🏫 👩‍🏭 👨‍🏭 👩‍💻 👨‍💻 👩‍💼 👨‍💼 👩‍🔧 👨‍🔧 👩‍🔬 👨‍🔬\" +\n          \" 👩‍🎨 👨‍🎨 👩‍🚒 👨‍🚒 👩‍✈️ 👨‍✈️ 👩‍🚀 👨‍🚀 👩‍⚖️ 👨‍⚖️ 🤶 🎅 👸 🤴 👰 🤵 👼 🤰 🙇‍♀️ 🙇 💁 💁‍♂️ 🙅 🙅‍♂️ 🙆 🙆‍♂️ 🙋 🙋‍♂️ 🤦‍♀️ 🤦‍♂️ 🤷‍♀\" +\n          \"️ 🤷‍♂️ 🙎 🙎‍♂️ 🙍 🙍‍♂️ 💇 💇‍♂️ 💆 💆‍♂️ 🕴 💃 🕺 👯 👯‍♂️ 🚶‍♀️ 🚶 🏃‍♀️ 🏃 👫 👭 👬 💑 👩‍❤️‍👩 👨‍❤️‍👨 💏 👩‍❤️‍💋‍👩 👨‍❤️‍💋‍👨 👪 👨‍👩‍👧\" +\n          \" 👨‍👩‍👧‍👦 👨‍👩‍👦‍👦 👨‍👩‍👧‍👧 👩‍👩‍👦 👩‍👩‍👧 👩‍👩‍👧‍👦 👩‍👩‍👦‍👦 👩‍👩‍👧‍👧 👨‍👨‍👦 👨‍👨‍👧 👨‍👨‍👧‍👦 👨‍👨‍👦‍👦 👨‍👨‍👧‍👧 👩‍👦 👩‍👧\" +\n          \" 👩‍👧‍👦 👩‍👦‍👦 👩‍👧‍👧 👨‍👦 👨‍👧 👨‍👧‍👦 👨‍👦‍👦 👨‍👧‍👧 👚 👕 👖 👔 👗 👙 👘 👠 👡 👢 👞 👟 👒 🎩 🎓 👑 ⛑ 🎒 👝 👛 👜 💼 👓\" +\n          \" 🕶 🌂 ☂️\";\n\n      let EmojiArr = EMOJIS.split(' ');\n      let groupNum = Math.ceil(EmojiArr.length / (24));\n      let items = [];\n\n      for (let i = 0; i < groupNum; i++) {\n          items.push(EmojiArr.slice(i * 24, (i + 1) * 24));\n      }\n\n      return items\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/emojiprovider/emojiprovider.ts","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase/app';\n\nimport { AuthenticationProvider } from '../authentication/authentication';\nimport { tableNames } from '../../app/app.firebaseconfig';\n\n/*\n  Generated class for the ChathandlingProvider provider.\n  \n  This provider get/set messages for different pages.\n*/\n@Injectable()\nexport class ChathandlingProvider {\n  constructor(private angularFireDatabase: AngularFireDatabase, public authenticationProvider: AuthenticationProvider) {}\n  \n  /**\n   * Get all messages from table for general channel.\n   * @param channelId channel id for chat messages.\n   */\n  getMessages(channelId: string = 'general') {\n\n    return this.angularFireDatabase.list(`${tableNames.ChatMessage}/${channelId}`)\n      .map(messages => messages.map((item) => {\n        item.day = new Date(item.timestamp || Date.now()).getDate();\n\n        if (item.from)\n          item.user = this.authenticationProvider.getFullProfile(item.from);\n\n          return item;\n      }));\n  }\n\n  /**\n   * Get all messages from table for general channel.\n   * @param channelId channel id for chat messages.\n   */\n  getPersonalMessages(channelId: string) {\n\n    return this.angularFireDatabase.list(`${tableNames.PersonalMessage}/${channelId}/${tableNames.PersonalMessage}`)\n      .map(messages => messages.map((item) => {\n        item.day = new Date(item.timestamp || Date.now()).getDate();\n\n        if (item.from)\n          item.user = this.authenticationProvider.getFullProfile(item.from);\n\n          return item;\n      }));\n  }\n\n  /**\n   * Get last specific number of messages.\n   * @param channelId channel id for chat messages.\n   * @param count number of message count.\n   */\n  getLastMessages(channelId: string = 'general', count: number = 5) {\n    return this.angularFireDatabase.list(`${tableNames.ChatMessage}/${channelId}`, {query: {\n      limitToLast: 5,\n      orderByPriority: true\n    }}).map(messages => messages.reverse().map((item) => {\n        if (item.from)\n          item.user = this.authenticationProvider.getFullProfile(item.from);\n\n          return item;\n      }));\n  }\n\n  /**\n   * Add entry in database for send message.\n   * @param userId user id for from field.\n   * @param message message string.\n   * @param channelId channel id for chat messages.\n   */\n  sendMessage(userId: string, message: string, channelId: string = 'general') {\n    return this.angularFireDatabase.list(`${tableNames.ChatMessage}/${channelId}`)\n      .push({\n        from: userId,\n        message: message,\n        timestamp: firebase.database['ServerValue']['TIMESTAMP']\n      });\n  }\n\n  /**\n   * Add entry in database for send message.\n   * @param userId user id for from field.\n   * @param message message string.\n   * @param channelId channel id for chat messages.\n   */\n  sendPersonalMessage(userId: string, message: string, channelId: string) {\n    return this.angularFireDatabase.list(`${tableNames.PersonalMessage}/${channelId}/${tableNames.PersonalMessage}`)\n      .push({\n        from: userId,\n        message: message,\n        timestamp: firebase.database['ServerValue']['TIMESTAMP']\n      });\n  }\n\n}\n\n/**\n * Message model class.\n */\nexport class MessageModel {\n  channelId?: string;             // channelId\n  from?: string;                  // userId\n  messsage?: string;              // message body(text)\n  image?: string | any;           // message body(image)\n  timestamp?: string | Object     // firebase timestamp\n}\n\n/**\n * Channel model class.\n */\nexport class ChannelModel {\n  name?: string;                   // channel name\n  icon?: string;                   // channel icon\n  members?: any;                   // member list\n  lastMessage?: string;            // last message id\n  timestamp?: string | Object;     // created / upadated time\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chathandling/chathandling.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n\n/*\n  Generated class for the RestapiServiceProvider provider.\n  RestapiServiceProvider contains all http request handling service for other stuff.\n*/\n@Injectable()\nexport class ApihandlingProvider {\n\n  private TAG: string = \"ApihandlingProvider\";\n\n  /**\n   * RestapiServiceProvider constructor for initial stuff handling.\n   * @param http Http instance to handle all requests and responces. \n   * @param logServiceProvider log service provider for log generation.\n   */\n  constructor(private http: Http, private loghandlingProvider: LoghandlingProvider) {\n    this.loghandlingProvider.showLog(this.TAG, 'Hello RestapiServiceProvider Provider');\n  }\n\n  /**\n   * This method handle http request from different apis. \n   * @param url URL value for request generation\n   */\n  callRequest(url: string)\n  {\n    this.loghandlingProvider.showLog(this.TAG, \"from request method\");\n    return  this.http.request(url)\n            .do((res : Response ) => this.loghandlingProvider.showLog(this.TAG, res.json()))\n            .map((res : Response ) => res.json())\n            .catch(error => error);\n  }\n\n  /**\n   * This method handle get http request from different apis. \n   * @param url URL value for request generation\n   */\n  callGetRequest(url: string)\n  {\n    this.loghandlingProvider.showLog(this.TAG, \"from get request method\");\n    return  this.http.get(url)\n            .do((res : Response ) => this.loghandlingProvider.showLog(this.TAG, res.json()))\n            .map((res : Response ) => res.json())\n            .catch(error => error);\n  }\n\n  /**\n   * This method handle post http request from different apis.\n   * @param url URL value for request generation\n   * @param data contains value need to pass with request.\n   */\n  callPostRequest(url: string, data: any)\n  {\n     return  this.http.post(url, data)\n             .do((res : Response ) => this.loghandlingProvider.showLog(this.TAG, res.json()))\n             .map((res : Response ) => res.json())\n             .catch(error => error);\n  }\n\n  /**\n   * Generate header for http request.\n   */\n  getHeader(){\n    let header = new Headers();\n    header.append('Content-Type', 'application/json');\n    //set some param using set method i.e authorization token.\n    return header;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/apihandling/apihandling.ts","import { Injectable } from '@angular/core';\n\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { tableNames } from '../../app/app.firebaseconfig';\n\n/*\n  Generated class for the ContactslistProvider provider.\n\n  Provide Contact list from users table.\n*/\n@Injectable()\nexport class ContactslistProvider {\n\n  constructor(private angularFireDatabase: AngularFireDatabase) {\n\n  }\n\n  getContactsList(){\n    return this.angularFireDatabase.list(tableNames.User, {query: {\n      orderByChild: 'updatedAt'\n    }}).map((contacts) => contacts.reverse());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/contactslist/contactslist.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Facebook } from '@ionic-native/facebook';\nimport { HttpModule } from '@angular/http';\nimport { Keyboard } from '@ionic-native/keyboard';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { config } from './app.firebaseconfig';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { MyApp } from './app.component';\n\nimport { AuthenticationProvider } from '../providers/authentication/authentication';\nimport { AlerthandlingProvider } from '../providers/alerthandling/alerthandling';\nimport { LoghandlingProvider } from '../providers/loghandling/loghandling';\nimport { ConstantProvider } from '../providers/constant/constant';\nimport { ApihandlingProvider } from '../providers/apihandling/apihandling';\nimport { LocalstorageProvider } from '../providers/localstorage/localstorage';\nimport { ContactslistProvider } from '../providers/contactslist/contactslist';\nimport { ChathandlingProvider } from '../providers/chathandling/chathandling';\nimport { EmojiProvider } from '../providers/emojiprovider/emojiprovider';\nimport { AutoSizeDirective } from '../directives/auto-size/auto-size';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AutoSizeDirective\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp),\n    AngularFireModule.initializeApp(config),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AuthenticationProvider,\n    AlerthandlingProvider,\n    LoghandlingProvider,\n    ConstantProvider,\n    Facebook,\n    Keyboard,\n    ApihandlingProvider,\n    AngularFireAuth,\n    LocalstorageProvider,\n    ContactslistProvider,\n    ChathandlingProvider,\n    EmojiProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\n\n/*\n  Generated class for the LoghandlingProvider provider.\n\n  LoghandlingProvider handle console log for application.\n*/\n@Injectable()\nexport class LoghandlingProvider {\n\n   private isDebugging: boolean = false;  // debugging state\n   private TAG: string = \"LoghandlingProvider\"; //tag for log\n\n  /**\n   * Basic constructor for LogServiceProvider.\n   */\n  constructor() {\n    this.showLog(this.TAG,'Hello LoghandlingProvider Provider');\n  }\n\n  /**\n   * This method display console log from other pages and providers, if debugging active.\n   * @param log value need display as log.\n   */\n  showLog(tag: string, log: string){\n    if(this.isDebugging)\n    {\n      console.log(tag + \" : \" + log);\n    }\n  }\n\n  /**\n   * This method allow to change debugging state.\n   * @param state boolean value having debugging state.\n   */\n  changeDebuggingState(state: boolean){\n    this.isDebugging = state;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/loghandling/loghandling.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform, LoadingController } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { LoghandlingProvider } from '../providers/loghandling/loghandling';\nimport { AuthenticationProvider } from '../providers/authentication/authentication';\nimport { LocalstorageProvider } from '../providers/localstorage/localstorage';\n\ndeclare let cordova: any;\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n    \n  @ViewChild(Nav) nav: Nav;\n  rootPage:any;\n  pages: Array<{title: string, component: any}>;\n  username: string = 'User name';\n  TAG: string = \"MyApp\";\n\n  /**\n   * Default constructor.\n   * @param platform \n   * @param statusBar \n   * @param splashScreen \n   * @param loghandlingProvider \n   * @param localstorageProvider\n   */\n  constructor(private platform: Platform, private statusBar: StatusBar, private splashScreen: SplashScreen, \n  private loghandlingProvider: LoghandlingProvider, private authenticationProvider: AuthenticationProvider,\n  private loadingController: LoadingController, private localstorageProvider: LocalstorageProvider) {\n    this.initializeApp();\n    \n    this.pages = [\n      { title: 'Home', component: 'TabsPage' }\n    ];\n  }\n\n  /**\n   * Open page according to selection.\n   * @param page Page to push.\n   */\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n\n  /**\n   * Signout user.\n   */\n  logout() {\n    this.authenticationProvider.signOut()\n      .then(() => this.nav.setRoot('LoginPage'));\n  }\n\n  /**\n   * Initialize application according to tocken available.\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n\n      cordova.plugins.Keyboard.disableScroll(true);\n\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n      this.loghandlingProvider.changeDebuggingState(true);\n\n      this.platform.registerBackButtonAction(() => {\n          // get current active page\n          let view = this.nav.getActive();\n          if(this.nav.canGoBack()){\n            let loading = this.loadingController.create();\n            loading.present();\n            this.nav.pop();\n            if (view.component.name === \"ChatMessagePage\" || view.component.name === \"ParsonalchatPage\") {\n              this.nav.setRoot(\"TabsPage\");\n              loading.dismiss();\n            }\n          } else{\n            this.platform.exitApp();\n          }\n      });\n    });\n\n    let loading = this.loadingController.create();\n    this.authenticationProvider.getAuthenticationStatus()\n      .map(state => !!state)\n      .subscribe(authenticated => {\n        loading.dismiss();\n        this.username = this.localstorageProvider.getUsername();\n        this.rootPage = (authenticated) ? 'TabsPage' : 'LoginPage';\n      }, (error) => {\n        loading.dismiss();\n        this.rootPage = 'LoginPage';\n        this.loghandlingProvider.showLog(this.TAG,'Error: ' + JSON.stringify(error));\n      });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { AlertController} from 'ionic-angular';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n/*\n  Generated class for the AlerthandlingProvider provider.\n\n  AlerthandlingProvider contains all alert handling methods.\n*/\n@Injectable()\nexport class AlerthandlingProvider {\n\n  loader: any;\n  alert: any;\n  private TAG:string = \"AlerthandlingProvider\";\n\n  /**\n   * Constructor of AlerthandlingProvider for basic initialisation stuff.\n   * @param alertCtrl AlertController for create alert\n   * @param logServiceProvider log handling service instance.\n   */\n  constructor(private alertCtrl: AlertController, private loghandlingProvider: LoghandlingProvider) {\n    this.loghandlingProvider.showLog(this.TAG,'Constructor UtilityServiceProvider Provider');\n  }\n\n   /**\n   * Dispaly default Alert for any message, response or erroe with 'OK' button etc.\n   * @param message value to display as message in alert dialog.\n   */\n  public presentAlert(title: string, message: string) {\n    this.alert = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n    });\n    this.alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/alerthandling/alerthandling.ts","import { ElementRef, HostListener, Directive, AfterViewInit, Optional, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs/Rx';\n\n\n@Directive({\n  selector: '[auto-size]' // Attribute selector\n})\nexport class AutoSizeDirective implements OnInit, OnDestroy, AfterViewInit {\n  private subscription: Subscription;\n  private textareaEl: HTMLTextAreaElement;\n\n  constructor(private el: ElementRef, private ngZone: NgZone, @Optional() private model: NgModel) {}\n\n  ngOnInit() {\n    if (!this.model)\n      return;\n\n    this.subscription = this.model.valueChanges.debounceTime(100).subscribe(() => this.adjust());\n  }\n\n  ngAfterViewInit() {\n    if (this.isTextarea(this.el.nativeElement)) {\n      this.setupTextarea(this.el.nativeElement);\n      return;\n    }\n\n    const children: HTMLElement[] = Array.from(this.el.nativeElement.children) as HTMLElement[];\n    const textareaEl = children.find(el => this.isTextarea(el));\n    if (textareaEl) {\n      this.setupTextarea(textareaEl as HTMLTextAreaElement);\n      return;\n    }\n\n    throw new Error('The `fz-elastic` attribute directive must be used on a `textarea` or an element that contains a `textarea`.');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n  @HostListener('input')\n  onInput(): void {\n    // This is run whenever the user changes the input.\n    this.adjust();\n  }\n\n  private isTextarea(el: HTMLElement) {\n    return el.tagName === 'TEXTAREA';\n  }\n\n  private setupTextarea(textareaEl: HTMLTextAreaElement) {\n    this.textareaEl = textareaEl;\n\n    // Set some necessary styles\n    const style = this.textareaEl.style;\n    style.overflow = 'hidden';\n    style.resize = 'none';\n\n    // Listen for window resize events\n    this.ngZone.runOutsideAngular(() => {\n      Observable.fromEvent(window, 'resize')\n        .debounceTime(100)\n        .subscribe(() => this.adjust());\n    });\n\n    // Ensure we adjust the textarea if\n    // content is already present\n    this.adjust();\n  }\n\n  private adjust(): void {\n    if (!this.textareaEl)\n      return;\n\n    this.textareaEl.style.height = 'auto';\n    this.textareaEl.style.height = this.textareaEl.scrollHeight + 'px';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/auto-size/auto-size.ts","export var config = {\n    apiKey: 'AIzaSyB3vBqyBvmWGsfsx02iXgdaoHbv_KqMTbE',\n    authDomain: 'https://surfer-2c9ac.firebaseapp.com/__/auth/handler',\n    databaseURL: 'https://surfer-2c9ac.firebaseio.com/',\n    projectId: 'surfer-2c9ac',\n    storageBucket: 'surfer-2c9ac.appspot.com',\n    messagingSenderId: '34191777330'\n  };\n\n/** firebase tables */\nexport const tableNames = {\n    User               : 'users',\n    Contacts           : 'contacts',\n    ChatChannel        : 'chat_channels',\n    ChatMember         : 'chat_members',\n    ChatMessage        : 'chat_messages',\n    PersonalMessage    : 'messages',\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.firebaseconfig.ts","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\nimport { Facebook } from '@ionic-native/facebook';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs/Rx';\n\nimport { LoghandlingProvider } from '../loghandling/loghandling';\nimport { usercredentials } from '../../models/interfaces/usercredentials';\nimport { tableNames } from '../../app/app.firebaseconfig';\nimport { LocalstorageProvider } from '../localstorage/localstorage'\n\n/*\n  Generated class for the AuthenticationProvider provider.\n\n  AuthenticationProvider provides facebook sigin and auth tocken from that.\n*/\n@Injectable()\nexport class AuthenticationProvider {\n\n  private TAG: string = 'AuthenticationProvider';\n\n  /**\n   * Basic constructor for LogServiceProvider.\n   */\n  constructor(private loghandlingProvider: LoghandlingProvider, private platform: Platform,\n  private facebook: Facebook, private angularFireAuth: AngularFireAuth, \n  private angularFireDatabase: AngularFireDatabase, private localstorageProvider: LocalstorageProvider) {\n    this.loghandlingProvider.showLog(this.TAG,'Hello AuthenticationProvider Provider');\n  }\n\n  /**\n   * sign in with facebook\n   */\n  signInWithFacebook() {\n     this.loghandlingProvider.showLog(this.TAG, \"sign in with facebook\");\n    if (this.platform.is('cordova')) {\n      return this.platform.ready().then(() => {\n        return this.facebook.login(['email', 'public_profile']).then((res) => {\n           this.loghandlingProvider.showLog(this.TAG, \"credential \" + res.authResponse.accessToken);\n          return res.authResponse.accessToken;\n        }, (error) => {\n           this.loghandlingProvider.showLog(this.TAG, \"from error block of auth\" + error.message);\n          return error.message;\n      });\n      });\n    } else {\n       this.loghandlingProvider.showLog(this.TAG, \"else block for none cordova.\");\n    }\n  }\n\n  /**\n   * Allow user to login with email and password from firebase.\n   * @param credentials user login credential having email and password.\n   */\n  login(credentials: usercredentials): firebase.Promise<any> {\n        return this.angularFireAuth.auth.signInWithEmailAndPassword(credentials.email, credentials.password);    \n  } \n\n  /**\n   * Update user profile according to user credentials on firebase.\n   * @param user user details after login\n   */\n  updateProfile(user): firebase.Promise<any> {\n    user.updatedAt = firebase.database['ServerValue']['TIMESTAMP'];\n\n    let providerData = user.providerData;\n    if (providerData && providerData.providerId === 'facebook.com')\n      user.photoURL = `https://graph.facebook.com/${providerData.uid}/picture?type=square`;\n\n    this.localstorageProvider.setUsername(user.displayName);\n    this.localstorageProvider.setEmail(user.email);\n      \n    return this.angularFireDatabase.object(tableNames.User + '/' + user.uid).update(user);\n  }\n\n  /**\n   * Sign out user.\n   */\n  signOut(): firebase.Promise<any> {\n    return this.angularFireAuth.auth.signOut();\n  }\n\n  /**\n   * Get authentication status.\n   */\n  getAuthenticationStatus(): Observable<firebase.User> {\n    return this.angularFireAuth.authState;\n  }\n\n  /**\n   * get full profile\n   */\n  getFullProfile(uid?: string): Observable<UserModel> {\n    if (uid)\n      return this.angularFireDatabase.object(tableNames.User + '/' + uid);\n    \n    return Observable.create((observer) => {\n      this.getAuthenticationStatus().subscribe((user: firebase.User) => {\n        if (user !== null)\n          this.angularFireDatabase.object(tableNames.User + '/' + user.uid).subscribe((res) => observer.next(res));\n      });\n    });\n  }\n\n}\n\nexport class UserModel {\n  uid?: string;\n  email?: string;\n  displayName?: string;\n  photoURL?: string;\n  providerData?: any;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/authentication/authentication.ts","import { Injectable } from '@angular/core';\n\nimport { ConstantProvider } from '../constant/constant';\nimport { LoghandlingProvider } from '../loghandling/loghandling';\n\n/*\n  Generated class for the LocalstorageProvider provider.\n\n  Local storage handling for app.\n*/\n@Injectable()\nexport class LocalstorageProvider {\n\n  private TAG:string = \"LocalstorageProvider\";\n\n  constructor(private loghandlingProvider: LoghandlingProvider) {\n    \n  }\n\n  public getUsername() {\n    let username = localStorage.getItem(ConstantProvider.KEY_USERNAME);\n    if (username === null || username === undefined) {\n      return \"\";\n    }\n    return username;\n  }\n\n  public setUsername(username) {\n    this.loghandlingProvider.showLog(this.TAG, username + ' as username stored');\n    localStorage.setItem(ConstantProvider.KEY_USERNAME, username);\n  }\n\n  public getEmail() {\n    let email = localStorage.getItem(ConstantProvider.KEY_EMAIL);\n    if (email === null || email === undefined) {\n      return \"\";\n    }\n    return email;\n  }\n\n  public setEmail(email) {\n    this.loghandlingProvider.showLog(this.TAG, email + ' as email stored');\n    localStorage.setItem(ConstantProvider.KEY_EMAIL, email);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/localstorage/localstorage.ts"],"sourceRoot":""}