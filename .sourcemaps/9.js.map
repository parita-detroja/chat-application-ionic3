{"version":3,"sources":["../../src/pages/sinch-audio-call/sinch-audio-call.module.ts","../../src/pages/sinch-audio-call/sinch-audio-call.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SinchAudioCallPage } from './sinch-audio-call';\n\n@NgModule({\n  declarations: [\n    SinchAudioCallPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SinchAudioCallPage),\n  ],\n})\nexport class SinchAudioCallPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sinch-audio-call/sinch-audio-call.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, Events, NavParams, NavController } from 'ionic-angular';\n\nimport { LoghandlingProvider } from '../../providers/loghandling/loghandling';\nimport { SinchCallingProvider } from '../../providers/sinch-calling/sinch-calling';\n\n/**\n * Generated class for the SinchAudioCallPage page.\n *\n * Audio call page using sinch calling plugin.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-sinch-audio-call',\n  templateUrl: 'sinch-audio-call.html',\n})\nexport class SinchAudioCallPage {\n\n  private TAG = \"SinchAudioCallPage\";\n  private callType: string;\n  private showHangup: boolean;\n  private showAnswer: boolean;\n  private showStatus: boolean;\n  private incomingCallId: string; \n  \n  constructor(\n    private events: Events,\n    private navParams: NavParams,\n    private navController: NavController,\n    private loghandlingProvider: LoghandlingProvider,\n    private sinchCallingProvider: SinchCallingProvider,) {\n      \n      this.events.subscribe('onCallEnded', () => {\n        this.loghandlingProvider.showLog(this.TAG, \"subscribe onCallEnded\");\n        this.navController.pop();\n        this.showStatus = true;\n        this.showHangup = false;\n        this.showAnswer = false;\n      });\n\n      this.events.subscribe('onCallEstablished', () => {\n        this.loghandlingProvider.showLog(this.TAG, \"subscribe onCallEstablished\");\n        this.showStatus = true;\n        this.showHangup = true;\n        this.showAnswer = false;\n      });\n\n      this.events.subscribe('onCallProgressing', () => {\n        this.loghandlingProvider.showLog(this.TAG, \"subscribe onCallProgressing\");\n        this.showStatus = true;\n        this.showHangup = true;\n        this.showAnswer = false;\n      });\n\n    this.callType = this.navParams.get('call_type');\n\n    if(this.callType == \"onIncomingCall\")\n    {\n      this.showStatus = true;\n      this.showHangup = true;\n      this.showAnswer = true;\n    }else{\n      this.showStatus = true;\n      this.showHangup = true;\n      this.showAnswer = false;\n    }\n  }\n\n  AnswerCall(answerStatus:boolean){\n    this.loghandlingProvider.showLog(this.TAG,\"from answer call\");\n    this.sinchCallingProvider.answerAudioCall(answerStatus).then((res: any) => {\n      this.loghandlingProvider.showLog(this.TAG, \"answerAudioCall responce : \" + JSON.stringify(res));\n    }).catch((err) => {\n      this.loghandlingProvider.showLog(this.TAG, \"answerAudioCall error : \" + err);\n    });\n  }\n\n  HangUp(){\n    this.sinchCallingProvider.hangupAudioCall().then((res: any) => {\n      this.loghandlingProvider.showLog(this.TAG, \"hangupAudioCall responce : \" + JSON.stringify(res));\n    }).catch((err) => {\n      this.loghandlingProvider.showLog(this.TAG, \"hangupAudioCall error : \" + err);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sinch-audio-call/sinch-audio-call.ts"],"sourceRoot":""}